/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head==null) return false;
        ListNode fast = head, slow = head;
    
        while(fast!=null&&slow!=null){
            slow = slow.next;
            if(fast.next!= null){
                fast = fast.next.next;
            }else{
                return false;
            }
            if(fast == slow) return true;
        }
        return false;
    }
}
