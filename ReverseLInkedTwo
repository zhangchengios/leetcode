/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if(head==null||m>n||m<0||n<0) return null;
        if(m==n) return head;
        int counter =0;
       
        ListNode newhead = new ListNode(-1);
        newhead.next = head;
        ListNode start = newhead;
        
        while(counter++<m-1) start = start.next;
        ListNode cur = start.next; 
        
        for(counter=0; counter<n-m; ++counter)
        {
            ListNode mid = start.next;
            start.next = cur.next;
            cur.next = start.next.next;
            start.next.next = mid;
        }
        
        return newhead.next;
    }
    
}
