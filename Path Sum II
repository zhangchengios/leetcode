/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ArrayList<ArrayList<Integer>> pathSum(TreeNode root, int sum) {
        
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        if(root!=null){
            ArrayList<Integer> path = new ArrayList<Integer>();
            visit(root,sum,result,path);
        }
        
        return result;
    }
    
    public void visit(TreeNode root, int sum, ArrayList<ArrayList<Integer>>res, ArrayList<Integer> path ){
        if(root.left==null&&root.right==null&& root.val==sum){
            ArrayList<Integer> newpath = new ArrayList(path);
            newpath.add(root.val);
            res.add(newpath);
        }
        if(root.left!=null){
            path.add(root.val);
            visit(root.left, sum-root.val, res, path);
            path.remove(path.size()-1);
            
        }
        if(root.right!=null){
            path.add(root.val);
            visit(root.right, sum-root.val, res, path);
            path.remove(path.size()-1);
        }
    }
}
