/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        ListNode nhead = new ListNode(-1);
        nhead.next = l1;
        ListNode pre = nhead;
        ListNode cur1 = l1;
        ListNode cur2 = l2;
        int add = 0;
        while(cur1!=null&&cur2!=null){
            add = (add>=10? 1+cur1.val+cur2.val: cur1.val+cur2.val);//forgot the = for the first time
            cur1.val = add%10;
            pre = cur1;
            cur1 = cur1.next;
            cur2 = cur2.next;
        }
        if(cur1==null){
           pre.next = cur2;
           cur1 = cur2;
        }
        
        while(cur1!=null){
            add = (add>=10? 1+cur1.val: cur1.val); // forgot = 
            cur1.val = add%10;
            pre = cur1;
            cur1 = cur1.next;
        }
        
        if(add>=10){//forgot the = for the first time
            ListNode node = new ListNode(1);
            node.next = null;
            pre.next = node;
        }
        
    
        return nhead.next;
        
        
    }
}
