//need to rewrite again
public class Solution {
    public int longestValidParentheses(String s) {
        if(s==null||s.length()<2) return 0;
        Stack<Integer> st = new Stack<Integer>();
        int[] rec = new int[s.length()];//init to all 0;
        int longest =0;
        
        for(int i =0; i<s.length(); ++i){
            if(s.charAt(i)=='('){
                st.push(i);

            }else{
                if(st.size()>0){
                    int pre = st.pop();
                    rec[i]= (pre==0?0:rec[pre-1]) + i-pre+1;// key here 
                    if(rec[i]>longest) longest=rec[i];
                }
            }
        }
        return longest;
        
    }
}
